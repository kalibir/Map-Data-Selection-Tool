[{"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\index.js":"1","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\App.js":"2","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\reportWebVitals.js":"3","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\index.js":"4","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MainWrapper\\index.js":"5","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\reducers\\rootReducer.js":"6","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\reducers\\featureReducer.js":"7","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\LeftMenu\\index.js":"8","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\action_types.js":"9","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\actions\\removeFeatureAction.js":"10","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\actions\\addFeatureAction.js":"11","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MapTool\\index.js":"12","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\LeftMenu\\styles.js":"13","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MainWrapper\\styles.js":"14","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MapTool\\styles.js":"15","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\LeftMenu\\variables.js":"16"},{"size":616,"mtime":1607352787458,"results":"17","hashOfConfig":"18"},{"size":119,"mtime":1607338984489,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":236,"mtime":1607351096336,"results":"21","hashOfConfig":"18"},{"size":1077,"mtime":1608230843731,"results":"22","hashOfConfig":"18"},{"size":166,"mtime":1607352678295,"results":"23","hashOfConfig":"18"},{"size":799,"mtime":1608281482049,"results":"24","hashOfConfig":"18"},{"size":3101,"mtime":1608292818771,"results":"25","hashOfConfig":"18"},{"size":137,"mtime":1608215238449,"results":"26","hashOfConfig":"18"},{"size":290,"mtime":1607510367663,"results":"27","hashOfConfig":"18"},{"size":275,"mtime":1607510375329,"results":"28","hashOfConfig":"18"},{"size":5819,"mtime":1608292315775,"results":"29","hashOfConfig":"18"},{"size":652,"mtime":1608230768199,"results":"30","hashOfConfig":"18"},{"size":445,"mtime":1608230810530,"results":"31","hashOfConfig":"18"},{"size":152,"mtime":1608231129654,"results":"32","hashOfConfig":"18"},{"size":73,"mtime":1608292481852,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1uj3yeg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\index.js",[],["70","71"],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\App.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\reportWebVitals.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\index.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MainWrapper\\index.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\reducers\\featureReducer.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\LeftMenu\\index.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\action_types.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\actions\\removeFeatureAction.js",[],["72","73"],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\store\\actions\\addFeatureAction.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MapTool\\index.js",["74","75"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport MapboxDraw from \"@mapbox/mapbox-gl-draw\";\r\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\r\nimport * as turf from \"@turf/turf\";\r\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\r\nimport \"@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport \"./map.css\";\r\nimport { addFeature } from \"../../store/actions/addFeatureAction\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaAngleDown, FaAngleUp } from \"react-icons/fa\";\r\n\r\nconst MapTool = ({ dispatch, features, mapViewport, bounds }) => {\r\n  mapboxgl.accessToken =\r\n    \"pk.eyJ1IjoidW5pdDAxIiwiYSI6ImNrZzB5Zmc4bzAzc2Uyem4xYTB6dmJnZWEifQ.HpNgy6VauOoxCBnK_2klpQ\";\r\n\r\n  const mapContainerRef = useRef(null);\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = (e) => {\r\n    e.preventDefault();\r\n    setShow(!show);\r\n    console.log(show);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let center = [mapViewport.lng, mapViewport.lat];\r\n    let initZoom = 4;\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: \"mapbox://styles/mapbox/satellite-v9\",\r\n      center:\r\n        features.length > 0\r\n          ? JSON.parse(localStorage.getItem(\"polyCenter\")).geometry.coordinates\r\n          : [mapViewport.lng, mapViewport.lat],\r\n      zoom: features.length > 0 ? 18 : 4,\r\n      maxBounds: bounds,\r\n      attributionControl: false,\r\n    });\r\n\r\n    const geocoder = new MapboxGeocoder({\r\n      accessToken: mapboxgl.accessToken,\r\n      mapboxgl: mapboxgl,\r\n    });\r\n    var Draw = new MapboxDraw({\r\n      displayControlsDefault: false,\r\n      controls: {\r\n        polygon: true,\r\n      },\r\n    });\r\n\r\n    map.addControl(Draw, \"top-right\");\r\n    map.addControl(geocoder, \"top-left\");\r\n\r\n    const updateArea = (e) => {\r\n      let data = Draw.getAll();\r\n\r\n      if (data.features.length > 0) {\r\n        if (e.type === \"draw.create\") {\r\n          let area = turf.area(data.features[data.features.length - 1]);\r\n\r\n          let roundArea = area.toFixed(2);\r\n          let newFeature = {\r\n            ...data.features[data.features.length - 1],\r\n            properties: {\r\n              area: roundArea,\r\n              label: \"New Selection\",\r\n              selected: false,\r\n            },\r\n          };\r\n\r\n          //use created feature to generate a polygon to find the center\r\n          let newPoly = turf.polygon([newFeature.geometry.coordinates[0]]);\r\n\r\n          //find center\r\n          let myCenter = turf.centroid(newPoly);\r\n          localStorage.setItem(\"polyCenter\", JSON.stringify(myCenter));\r\n          // NEW MAP CENTER FROM POLYGON STORED ON LOCAL STORAGE\r\n          center = JSON.parse(localStorage.getItem(\"polyCenter\")).geometry\r\n            .coordinates;\r\n          //NEW INITIAL ZOOM ON RE RENDER\r\n          initZoom = 12;\r\n          dispatch(addFeature(newFeature));\r\n        }\r\n      }\r\n    };\r\n\r\n    map.on(\"draw.create\", updateArea);\r\n    map.on(\"draw.delete\", updateArea);\r\n    map.on(\"draw.update\", updateArea);\r\n\r\n    //VARIABLE TO STORE THE FEATURES\r\n    var geojson = {\r\n      type: \"FeatureCollection\",\r\n      features: [...features],\r\n    };\r\n\r\n    map.on(\"load\", function () {\r\n      if (features.length > 0) {\r\n        geojson.features.forEach((feature, index) => {\r\n          // DEFINE BOUNDING BOX FOR EACH FEATURE\r\n          var bbox = turf.bbox(feature);\r\n\r\n          //ADD EACH FEATURE TO THE MAP\r\n          map.addSource(`jsonFile${index}`, {\r\n            type: \"geojson\",\r\n            data: feature,\r\n          });\r\n          map.addLayer({\r\n            id: `jsonFile${index}`,\r\n            type: \"fill\",\r\n            source: `jsonFile${index}`,\r\n            layout: {},\r\n\r\n            paint: {\r\n              \"fill-color\": \"#303F9F\",\r\n              \"fill-opacity\": 0.5,\r\n            },\r\n          });\r\n\r\n          // FIT MAP TO SELECTION\r\n          document\r\n            .getElementById(`fit-${index}`)\r\n            .addEventListener(\"click\", function () {\r\n              map.fitBounds(bbox, { padding: 20 });\r\n            });\r\n\r\n          // SELECT/DESELECT ON CLICK\r\n          map.on(\"click\", `jsonFile${index}`, function (e) {\r\n            feature.properties.selected = !feature.properties.selected;\r\n            map.setPaintProperty(\r\n              `jsonFile${index}`,\r\n              \"fill-color\",\r\n              feature.properties.selected ? \"#FD9812\" : \"#303F9F\"\r\n            );\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => map.remove();\r\n  }, [dispatch, features, bounds, mapViewport.lng, mapViewport.lat]);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"map-container\"\r\n        style={{ height: \"100%\" }}\r\n        ref={mapContainerRef}\r\n      ></div>\r\n      {features.length > 0 ? (\r\n        <div\r\n          className=\"zoom-box\"\r\n          style={\r\n            features.length <= 3 && !show\r\n              ? { height: \"auto\" }\r\n              : features.length > 3 && show\r\n              ? { height: \"200px\" }\r\n              : null\r\n          }\r\n        >\r\n          <Button color=\"primary\" onClick={handleShow}>\r\n            Zoom on selection {show ? <FaAngleUp /> : <FaAngleDown />}\r\n          </Button>\r\n          {features.map((feature, index) => {\r\n            return (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                id={`fit-${index}`}\r\n                key={index}\r\n                className={classes.zoom}\r\n                style={show ? { display: \"block\" } : { display: \"none\" }}\r\n              >\r\n                {feature.properties.label}\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapTool;\r\n","C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\LeftMenu\\styles.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MainWrapper\\styles.js",[],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\MapTool\\styles.js",[],["76","77"],"C:\\Users\\logo_\\Desktop\\map-selection-tool-ui\\src\\components\\LeftMenu\\variables.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":81,"column":11,"nodeType":"86","messageId":"87","endLine":81,"endColumn":17},{"ruleId":"84","severity":1,"message":"88","line":84,"column":11,"nodeType":"86","messageId":"87","endLine":84,"endColumn":19},{"ruleId":"78","replacedBy":"89"},{"ruleId":"80","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-unused-vars","'center' is assigned a value but never used.","Identifier","unusedVar","'initZoom' is assigned a value but never used.",["91"],["92"],"no-global-assign","no-unsafe-negation"]